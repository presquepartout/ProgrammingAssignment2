getwd()
setwd("~/Documents/Data-Analysis/git/datasciencecoursera/assignment2/ProgrammingAssignment2")
ls()
makeVector <- function(x = numeric()) {}
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function () m
list(set = set, get = get, )
m <- NULL}
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
x <- 1:5
x
myVectorCache <- makeVector(x)
myVectorCache
myVectorCache$getmean
myVectorCache$get
a <- makeVector(c(1, 2, 3, 4, 5))
a$get()
a$getmean()
cachemean <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
cachemean(a)
makeCacheMatrix <- function(x = matrix()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setSolve <- function(solve) m <<- solve
getSolve <- function() m
list(set = set, get = get,
setSolve = setSolve,
getSolve = getSolve)
}
testInput <- matrix (1:4, 2, 2)
testInput
myTest <- makeCacheMatrix(testInput)
myTest$get()
cacheSolve <- function(x, ...) {
m <- x$getSolve()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- solve(data, ...)
x$setSolve(m)
m
}
myTest$getSolve()
cacheSolve(myTest)
myTest$getSolve()
?t.test
?tnorm
?t.norm
?pt
?qnorm
qnorm(0.95, mean = 100, sd=10)
sd2 <- 10/sqrt(50)
qnorm(0.95, mean=100, sd = sd2)
?pbinom
pbinom(4, size=6, prob=0.5, lower.tail=false)
pbinom(4, size=6, prob=0.5, lower.tail=FALSE)
pbinom(5, size=6, prob=0.5, lower.tail=FALSE)
pp <- choose(6,5)*0.5^6 + choose(6,6)*0.5^6
pp
?pnorm
pnorm(1)
pnorm(0, lower.tail=TRUE)
pnorm(1, lower.tail = FALSE)
pnorm(0.51, mean=0.5, sd = 1/1200, lower.tail = FALSE)
pnorm(0.51, mean=0.5, sd = 1/12, lower.tail = FALSE)
pnorm(0.51, mean=0.5, sd = sqrt(1/1200), lower.tail = FALSE)
mean(1:6)
10/4/10
10/4
?ppois
ppois(20, lambda = 33, lower.tail = TRUE)
?lm
?confidence
?interval
?conf
mtcars
mtcars 1:5
mtcars[1:5,]
?sd
?serror
?stderror
?qnorm
qnorm(.5)
qnorm(0.84)
qnorm(0.975)
mtcars[1,]
mtcars[,1]
mpg_mean <- mean(mtcars[,1])
mpg_mean
mpg_sigma <- sd(mtcars[,1])
mpg_sigma
length(mtcars[,1])
?qt
qt(0.975, 31)
t_mpg <- qt(0.975, 31)
mpg_mean + c(-1,1)*(mpg_sigma*qnorm(0.975))
mpg_mean + c(-1,1)*(mpg_sigma*qt(0.975, 31))
mpg_mean + c(-1,1)*(mpg_sigma*qt(0.975, 30))
mpg_mean + c(-1,1)*(mpg_sigma*qt(0.95, 31))
mpg_mean + c(-1,1)*(mpg_sigma*qt(0.975, 31)/sqrt(32))
data(mtcars)
?t.test
round(t.test(mtcars$mpg)$conf.int)
?qt
qt(0.975, df=8)
qt(0.975, df=8)/3
qt(0.95, df=8)
qt(0.95, df=8)/3
mtcars
?t.test
m4 <- mtcars$mpg[mtcars$cyl ==4]
m6 <- mtcars$mpg[mtcars$cyl ==6]
confint <- as.vector(t.test(m4, m6, var.equal = TRUE)$conf.int)
confint
t.test(m4, m6, var.equal=TRUE)
?z.test
?conf.int
?qnorm
qnorm(0.95)
12 - qnorm(0.95)*4
12 - qnorm(0.95)*4/10
12 - qnorm(0.95)*4/5
?t.test
Baseline <- c(140, 138, 150, 148, 135)
Week2 <- c(132, 135, 151, 146, 130)
t.test(Baseline, Week2, alternative = "two.sided")
Baseline
t.test(Baseline, Week2, alternative = "two.sided", paired = TRUE)
?power.t.test
power.t.test(n=9, sd=30, type="one.sample", alternative="two.sided")
power.t.test(n=9, sd=30, delta = NULL, type="one.sample", alternative="two.sided")
power.t.test(n=9, sd=30, delta = NULL, power=0.95, type="one.sample", alternative="two.sided")
1100-power.t.test$delta
1100 - 42
qt(0.975, df=8)
1100-23
?t.test
?binom.test
binom.test(x=3, n=4, alternative = "greater")
binom.test(x=10, n=1787, p = 0.01, alternative = "less")
binom.test(x=10, n=1787, p = 0.01, alternative = "greater")
?t.test
?power.t.test
?pt
t-val <- (-3-1)*3/sqrt(1.5^2 + 1.8^2)
t_val <- (-3-1)*3/sqrt(1.5^2 + 1.8^2)
t_val
pt(t_val, df=16)
?power.t.test
power.t.test(n=100, delta = -0.01, sd = 0.04, alternative = "one.sided")
power.t.test(n=100, delta = -0.01, sd = 0.04, type = "one.sample", alternative = "one.sided")
power.t.test(n=100, delta = -0.01, sd = 0.04, type = "paired", alternative = "one.sided")
power.t.test(n=2, delta = -0.01, sd = 0.04, alternative = "one.sided")
power.t.test(n=200, delta = -0.01, sd = 0.04, alternative = "one.sided")
power.t.test(n=100, delta = -1, sd = 4, alternative = "one.sided")
power.t.test(n=100, delta = -1, sd = 4, alternative = "one.sided", type="paired")
mtcars$mpg
mpg_mean
mpg_sd
mpg_sigma
?qnorm
qnorm(p=0.95, mean=mpg_mean, sd=mpg_sigma)
mod_mpg_sigma <- mpg_sigma/sqrt(length(mtcars$mpg))
qnorm(p=0.95, mean=mpg_mean, sd=mod_mpg_sigma)
?t.test
t.test(x=m4, y=m6, alternative= "two.sided")
t.test(x=m4, y=m6, alternative= "two.sided", paired=FALSE, var.equal=FALSE)
?power.t.test
power.t.test(n=100, delta=-0.01, sd=0.004, type="paired", alternative="one.sided")
power.t.test(n=100, delta=-0.01, sd=0.4, type="paired", alternative="one.sided")
power <- pnorm(qnorm(0.95)*0.04, mean=-0.01, sd=0.04)
power
power <- pnorm(-0.01+qnorm(0.95)*0.04, mean=-0.01, sd=0.04)
power
power <- pnorm(-0.01+qnorm(0.95)*0.04, mean=-0.01, sd=0.04, lower.tail=TRUE)
power
power <- pnorm(qnorm(0.95)*0.004, mean=-0.01, sd=0.004)
power
power <- pnorm(-0.01+qnorm(0.95)*0.004, mean=-0.01, sd=0.004, lower.tail=TRUE)
power
?power.norm
?power.z.test
?power.norm.test
?power.t.test
power.t.test(n=100, delta=-0.01, sd=0.004, sig.level=0.05, type="paired", alternative="one.sided")
power.t.test(n=100, delta=-0.01, sd=0.4, sig.level=0.05, type="paired", alternative="one.sided")
power.t.test(n=100, delta=-0.01, sd=0.04, sig.level=0.05, type="paired", alternative="one.sided")
pnorm(qnorm(0.95, mean=-0.01, sd=0.04))
power.t.test(delta=-0.01, sd=0.04, sig.level=0.05, power=0.9, type="paired", alternative = "one.sided")
pnorm(qnorm(0.95, mean=-0.01, sd=0.04))
power.t.test(n=NULL, delta=-0.01, sd=0.04, sig.level=0.05, power=0.9, type="paired", alternative = "one.sided")
power.t.test(n=NULL, delta=0.01, sd=0.04, sig.level=0.05, power=0.9, type="paired", alternative = "one.sided")
pnorm(qnorm((44-42.04)/12/sqrt(288)))
pnorm(qnorm((44-42.04)*288/12)
)
pnorm(qnorm((44-42.04)*288/12))
diff <- 44-42.04
pnorm(qnorm(diff*288/12))
diff*288/12
diff*sqrt(288)/12
diff*sqrt(288)/sqrt(288)
pnorm(1.96)
